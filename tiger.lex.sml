structure Mlex=
   struct
    structure UserDeclarations =
      struct
type pos            = int
type lexresult      = Tokens.token

val lineNum         = ErrorMsg.lineNum
val linePos         = ErrorMsg.linePos
val nested_comment  = ref 0
val buff_string     = ref ""
val left_tag        = ref 0
val format_flag     = ref false
val valid_str       = ref true
fun err(p1,p2)      = ErrorMsg.error p1

fun eof()           = let val pos = hd(!linePos) in Tokens.EOF(pos,pos) end


end (* end of user routines *)
exception LexError (* raised if illegal leaf action tried *)
structure Internal =
	struct

datatype yyfinstate = N of int
type statedata = {fin : yyfinstate list, trans: string}
(* transition & final state table *)
val tab = let
val s = [ 
 (0, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (1, 
"\011\011\011\011\011\011\011\011\011\098\097\011\011\011\011\011\
\\011\011\011\011\011\011\011\011\011\011\011\011\011\011\011\011\
\\096\011\095\011\011\011\094\011\093\092\091\090\089\088\087\085\
\\083\083\083\083\083\083\083\083\083\083\081\080\077\076\074\011\
\\011\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\
\\015\015\015\015\015\015\015\015\015\015\015\073\011\072\011\011\
\\011\067\062\015\060\054\044\015\015\041\015\015\038\015\035\033\
\\015\015\015\015\025\015\022\017\015\015\015\014\013\012\011\011\
\\011"
),
 (3, 
"\099\099\099\099\099\099\099\099\099\099\104\099\099\099\099\099\
\\099\099\099\099\099\099\099\099\099\099\099\099\099\099\099\099\
\\099\099\099\099\099\099\099\099\099\099\102\099\099\099\099\100\
\\099\099\099\099\099\099\099\099\099\099\099\099\099\099\099\099\
\\099\099\099\099\099\099\099\099\099\099\099\099\099\099\099\099\
\\099\099\099\099\099\099\099\099\099\099\099\099\099\099\099\099\
\\099\099\099\099\099\099\099\099\099\099\099\099\099\099\099\099\
\\099\099\099\099\099\099\099\099\099\099\099\099\099\099\099\099\
\\099"
),
 (5, 
"\105\105\105\105\105\105\105\105\105\105\108\105\105\105\105\105\
\\105\105\105\105\105\105\105\105\105\105\105\105\105\105\105\105\
\\105\105\107\105\105\105\105\105\105\105\105\105\105\105\105\105\
\\105\105\105\105\105\105\105\105\105\105\105\105\105\105\105\105\
\\105\105\105\105\105\105\105\105\105\105\105\105\105\105\105\105\
\\105\105\105\105\105\105\105\105\105\105\105\105\106\105\105\105\
\\105\105\105\105\105\105\105\105\105\105\105\105\105\105\105\105\
\\105\105\105\105\105\105\105\105\105\105\105\105\105\105\105\105\
\\105"
),
 (7, 
"\109\109\109\109\109\109\109\109\109\112\120\109\109\109\109\109\
\\109\109\109\109\109\109\109\109\109\109\109\109\109\109\109\109\
\\112\109\119\109\109\109\109\109\109\109\109\109\109\109\109\109\
\\116\116\116\116\116\116\116\116\116\116\109\109\109\109\109\109\
\\109\109\109\109\109\109\109\109\109\109\109\109\109\109\109\109\
\\109\109\109\109\109\109\109\109\109\109\109\109\115\109\113\109\
\\109\109\109\109\109\109\112\109\109\109\109\109\109\109\111\109\
\\109\109\109\109\110\109\109\109\109\109\109\109\109\109\109\109\
\\109"
),
 (9, 
"\121\121\121\121\121\121\121\121\121\122\125\121\121\121\121\121\
\\121\121\121\121\121\121\121\121\121\121\121\121\121\121\121\121\
\\122\121\124\121\121\121\121\121\121\121\121\121\121\121\121\121\
\\121\121\121\121\121\121\121\121\121\121\121\121\121\121\121\121\
\\121\121\121\121\121\121\121\121\121\121\121\121\121\121\121\121\
\\121\121\121\121\121\121\121\121\121\121\121\121\123\121\121\121\
\\121\121\121\121\121\121\122\121\121\121\121\121\121\121\121\121\
\\121\121\121\121\121\121\121\121\121\121\121\121\121\121\121\121\
\\121"
),
 (15, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\016\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\
\\000"
),
 (17, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\016\
\\000\016\016\016\016\016\016\016\018\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\
\\000"
),
 (18, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\016\
\\000\016\016\016\016\016\016\016\016\019\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\
\\000"
),
 (19, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\016\
\\000\016\016\016\016\016\016\016\016\016\016\016\020\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\
\\000"
),
 (20, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\016\
\\000\016\016\016\016\021\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\
\\000"
),
 (22, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\016\
\\000\023\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\
\\000"
),
 (23, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\016\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\024\016\016\016\016\016\016\016\016\000\000\000\000\000\
\\000"
),
 (25, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\016\
\\000\016\016\016\016\016\016\016\030\016\016\016\016\016\016\029\
\\016\016\016\016\016\016\016\016\016\026\016\000\000\000\000\000\
\\000"
),
 (26, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\016\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\027\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\
\\000"
),
 (27, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\016\
\\000\016\016\016\016\028\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\
\\000"
),
 (30, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\016\
\\000\016\016\016\016\031\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\
\\000"
),
 (31, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\016\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\032\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\
\\000"
),
 (33, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\016\
\\000\016\016\016\016\016\034\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\
\\000"
),
 (35, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\016\
\\000\016\016\016\016\016\016\016\016\036\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\
\\000"
),
 (36, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\016\
\\000\016\016\016\016\016\016\016\016\016\016\016\037\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\
\\000"
),
 (38, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\016\
\\000\016\016\016\016\039\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\
\\000"
),
 (39, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\016\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\040\016\016\016\016\016\016\000\000\000\000\000\
\\000"
),
 (41, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\016\
\\000\016\016\016\016\016\043\016\016\016\016\016\016\016\042\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\
\\000"
),
 (44, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\016\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\052\
\\016\016\016\016\016\045\016\016\016\016\016\000\000\000\000\000\
\\000"
),
 (45, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\016\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\046\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\
\\000"
),
 (46, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\016\
\\000\016\016\047\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\
\\000"
),
 (47, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\016\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\048\016\016\016\016\016\016\000\000\000\000\000\
\\000"
),
 (48, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\016\
\\000\016\016\016\016\016\016\016\016\049\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\
\\000"
),
 (49, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\016\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\050\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\
\\000"
),
 (50, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\016\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\051\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\
\\000"
),
 (52, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\016\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\053\016\016\016\016\016\016\016\016\000\000\000\000\000\
\\000"
),
 (54, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\016\
\\000\016\016\016\016\016\016\016\016\016\016\016\057\016\055\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\
\\000"
),
 (55, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\016\
\\000\016\016\016\056\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\
\\000"
),
 (57, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\016\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\058\016\016\016\016\016\016\016\000\000\000\000\000\
\\000"
),
 (58, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\016\
\\000\016\016\016\016\059\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\
\\000"
),
 (60, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\016\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\061\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\
\\000"
),
 (62, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\016\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\063\016\016\016\016\016\016\016\016\000\000\000\000\000\
\\000"
),
 (63, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\016\
\\000\016\016\016\016\064\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\
\\000"
),
 (64, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\016\
\\000\065\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\
\\000"
),
 (65, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\016\
\\000\016\016\016\016\016\016\016\016\016\016\066\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\
\\000"
),
 (67, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\016\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\068\016\016\016\016\016\016\016\016\000\000\000\000\000\
\\000"
),
 (68, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\016\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\069\016\016\016\016\016\016\016\016\000\000\000\000\000\
\\000"
),
 (69, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\016\
\\000\070\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\
\\000"
),
 (70, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\016\
\\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\
\\016\016\016\016\016\016\016\016\016\071\016\000\000\000\000\000\
\\000"
),
 (74, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\075\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (77, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\079\078\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (81, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\082\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (83, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\084\084\084\084\084\084\084\084\084\084\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (85, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\086\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (100, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\101\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (102, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\103\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (113, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\114\114\114\114\114\114\114\114\114\114\114\114\114\114\114\114\
\\114\114\114\114\114\114\114\114\114\114\114\114\114\114\114\114\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (116, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\117\117\117\117\117\117\117\117\117\117\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (117, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\118\118\118\118\118\118\118\118\118\118\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
(0, "")]
fun f x = x 
val s = map f (rev (tl (rev s))) 
exception LexHackingError 
fun look ((j,x)::r, i: int) = if i = j then x else look(r, i) 
  | look ([], i) = raise LexHackingError
fun g {fin=x, trans=i} = {fin=x, trans=look(s,i)} 
in Vector.fromList(map g 
[{fin = [], trans = 0},
{fin = [], trans = 1},
{fin = [], trans = 1},
{fin = [], trans = 3},
{fin = [], trans = 3},
{fin = [], trans = 5},
{fin = [], trans = 5},
{fin = [], trans = 7},
{fin = [], trans = 7},
{fin = [], trans = 9},
{fin = [], trans = 9},
{fin = [(N 199)], trans = 0},
{fin = [(N 116),(N 199)], trans = 0},
{fin = [(N 87),(N 199)], trans = 0},
{fin = [(N 118),(N 199)], trans = 0},
{fin = [(N 136),(N 199)], trans = 15},
{fin = [(N 136)], trans = 15},
{fin = [(N 136),(N 199)], trans = 17},
{fin = [(N 136)], trans = 18},
{fin = [(N 136)], trans = 19},
{fin = [(N 136)], trans = 20},
{fin = [(N 63),(N 136)], trans = 15},
{fin = [(N 136),(N 199)], trans = 22},
{fin = [(N 136)], trans = 23},
{fin = [(N 14),(N 136)], trans = 15},
{fin = [(N 136),(N 199)], trans = 25},
{fin = [(N 136)], trans = 26},
{fin = [(N 136)], trans = 27},
{fin = [(N 10),(N 136)], trans = 15},
{fin = [(N 53),(N 136)], trans = 15},
{fin = [(N 136)], trans = 30},
{fin = [(N 136)], trans = 31},
{fin = [(N 73),(N 136)], trans = 15},
{fin = [(N 136),(N 199)], trans = 33},
{fin = [(N 32),(N 136)], trans = 15},
{fin = [(N 136),(N 199)], trans = 35},
{fin = [(N 136)], trans = 36},
{fin = [(N 43),(N 136)], trans = 15},
{fin = [(N 136),(N 199)], trans = 38},
{fin = [(N 136)], trans = 39},
{fin = [(N 47),(N 136)], trans = 15},
{fin = [(N 136),(N 199)], trans = 41},
{fin = [(N 39),(N 136)], trans = 15},
{fin = [(N 76),(N 136)], trans = 15},
{fin = [(N 136),(N 199)], trans = 44},
{fin = [(N 136)], trans = 45},
{fin = [(N 136)], trans = 46},
{fin = [(N 136)], trans = 47},
{fin = [(N 136)], trans = 48},
{fin = [(N 136)], trans = 49},
{fin = [(N 136)], trans = 50},
{fin = [(N 23),(N 136)], trans = 15},
{fin = [(N 136)], trans = 52},
{fin = [(N 57),(N 136)], trans = 15},
{fin = [(N 136),(N 199)], trans = 54},
{fin = [(N 136)], trans = 55},
{fin = [(N 36),(N 136)], trans = 15},
{fin = [(N 136)], trans = 57},
{fin = [(N 136)], trans = 58},
{fin = [(N 68),(N 136)], trans = 15},
{fin = [(N 136),(N 199)], trans = 60},
{fin = [(N 50),(N 136)], trans = 15},
{fin = [(N 136),(N 199)], trans = 62},
{fin = [(N 136)], trans = 63},
{fin = [(N 136)], trans = 64},
{fin = [(N 136)], trans = 65},
{fin = [(N 29),(N 136)], trans = 15},
{fin = [(N 136),(N 199)], trans = 67},
{fin = [(N 136)], trans = 68},
{fin = [(N 136)], trans = 69},
{fin = [(N 136)], trans = 70},
{fin = [(N 82),(N 136)], trans = 15},
{fin = [(N 120),(N 199)], trans = 0},
{fin = [(N 122),(N 199)], trans = 0},
{fin = [(N 94),(N 199)], trans = 74},
{fin = [(N 92)], trans = 0},
{fin = [(N 104),(N 199)], trans = 0},
{fin = [(N 99),(N 199)], trans = 77},
{fin = [(N 102)], trans = 0},
{fin = [(N 97)], trans = 0},
{fin = [(N 128),(N 199)], trans = 0},
{fin = [(N 130),(N 199)], trans = 81},
{fin = [(N 85)], trans = 0},
{fin = [(N 139),(N 199)], trans = 83},
{fin = [(N 139)], trans = 83},
{fin = [(N 106),(N 199)], trans = 85},
{fin = [(N 142)], trans = 0},
{fin = [(N 114),(N 199)], trans = 0},
{fin = [(N 110),(N 199)], trans = 0},
{fin = [(N 132),(N 199)], trans = 0},
{fin = [(N 112),(N 199)], trans = 0},
{fin = [(N 108),(N 199)], trans = 0},
{fin = [(N 124),(N 199)], trans = 0},
{fin = [(N 126),(N 199)], trans = 0},
{fin = [(N 89),(N 199)], trans = 0},
{fin = [(N 144),(N 199)], trans = 0},
{fin = [(N 3),(N 199)], trans = 0},
{fin = [(N 1)], trans = 0},
{fin = [(N 5),(N 199)], trans = 0},
{fin = [(N 152)], trans = 0},
{fin = [(N 152)], trans = 100},
{fin = [(N 147)], trans = 0},
{fin = [(N 152)], trans = 102},
{fin = [(N 150)], trans = 0},
{fin = [(N 154)], trans = 0},
{fin = [(N 162)], trans = 0},
{fin = [(N 160),(N 162)], trans = 0},
{fin = [(N 156),(N 162)], trans = 0},
{fin = [(N 158)], trans = 0},
{fin = [(N 185)], trans = 0},
{fin = [(N 166),(N 185)], trans = 0},
{fin = [(N 164),(N 185)], trans = 0},
{fin = [(N 181),(N 185)], trans = 0},
{fin = [(N 185)], trans = 113},
{fin = [(N 169)], trans = 0},
{fin = [(N 177),(N 185)], trans = 0},
{fin = [(N 185)], trans = 116},
{fin = [], trans = 117},
{fin = [(N 173)], trans = 0},
{fin = [(N 175),(N 185)], trans = 0},
{fin = [(N 183)], trans = 0},
{fin = [(N 197)], trans = 0},
{fin = [(N 191),(N 197)], trans = 0},
{fin = [(N 193),(N 197)], trans = 0},
{fin = [(N 195),(N 197)], trans = 0},
{fin = [(N 187)], trans = 0}])
end
structure StartStates =
	struct
	datatype yystartstate = STARTSTATE of int

(* start state definitions *)

val COMMENT = STARTSTATE 3;
val INITIAL = STARTSTATE 1;
val SLASH = STARTSTATE 7;
val SLASH_M = STARTSTATE 9;
val STRING = STARTSTATE 5;

end
type result = UserDeclarations.lexresult
	exception LexerError (* raised if illegal leaf action tried *)
end

fun makeLexer yyinput =
let	val yygone0=1
	val yyb = ref "\n" 		(* buffer *)
	val yybl = ref 1		(*buffer length *)
	val yybufpos = ref 1		(* location of next character to use *)
	val yygone = ref yygone0	(* position in file of beginning of buffer *)
	val yydone = ref false		(* eof found yet? *)
	val yybegin = ref 1		(*Current 'start state' for lexer *)

	val YYBEGIN = fn (Internal.StartStates.STARTSTATE x) =>
		 yybegin := x

fun lex () : Internal.result =
let fun continue() = lex() in
  let fun scan (s,AcceptingLeaves : Internal.yyfinstate list list,l,i0) =
	let fun action (i,nil) = raise LexError
	| action (i,nil::l) = action (i-1,l)
	| action (i,(node::acts)::l) =
		case node of
		    Internal.N yyk => 
			(let fun yymktext() = substring(!yyb,i0,i-i0)
			     val yypos = i0+ !yygone
			open UserDeclarations Internal.StartStates
 in (yybufpos := i; case yyk of 

			(* Application actions *)

  1 => (lineNum := !lineNum + 1;
                        linePos := yypos :: !linePos;
                        continue())
| 10 => (Tokens.TYPE(yypos, yypos + 4))
| 102 => (Tokens.NEQ(yypos, yypos + 2))
| 104 => (Tokens.EQ(yypos, yypos + 1))
| 106 => (Tokens.DIVIDE(yypos, yypos + 1))
| 108 => (Tokens.TIMES(yypos, yypos + 1))
| 110 => (Tokens.MINUS(yypos, yypos + 1))
| 112 => (Tokens.PLUS(yypos, yypos + 1))
| 114 => (Tokens.DOT(yypos, yypos + 1))
| 116 => (Tokens.RBRACE(yypos, yypos + 1))
| 118 => (Tokens.LBRACE(yypos, yypos + 1))
| 120 => (Tokens.RBRACK(yypos, yypos + 1))
| 122 => (Tokens.LBRACK(yypos, yypos + 1))
| 124 => (Tokens.RPAREN(yypos, yypos + 1))
| 126 => (Tokens.LPAREN(yypos, yypos + 1))
| 128 => (Tokens.SEMICOLON(yypos, yypos + 1))
| 130 => (Tokens.COLON(yypos, yypos + 1))
| 132 => (Tokens.COMMA(yypos, yypos + 1))
| 136 => let val yytext=yymktext() in Tokens.ID(yytext, yypos, yypos + size yytext) end
| 139 => let val yytext=yymktext() in let val SOME tempint = Int.fromString(yytext)
                        in
                          Tokens.INT(tempint,
                                     yypos, yypos + size yytext)
                        end end
| 14 => (Tokens.VAR(yypos, yypos + 3))
| 142 => (YYBEGIN COMMENT;
                        nested_comment := 1;
                        continue())
| 144 => (YYBEGIN STRING;
                        buff_string := "";
                        left_tag := yypos;
                        format_flag := true;
                        valid_str := true;
                        continue())
| 147 => (nested_comment := !nested_comment + 1;
                        continue())
| 150 => (nested_comment := !nested_comment - 1;
                        if (!nested_comment = 0) then
                            YYBEGIN INITIAL
                        else if (!nested_comment < 0) then
                            ErrorMsg.error yypos ("illegal comments")
                        else ();
                        continue())
| 152 => (continue())
| 154 => (lineNum := !lineNum + 1;
                        linePos := yypos :: !linePos;
                        continue())
| 156 => (YYBEGIN INITIAL;
                        if (!format_flag andalso !valid_str)
                          then
                            Tokens.STRING(!buff_string, !left_tag, yypos + 1)
                          else
                            (ErrorMsg.error yypos ("illegal string");
                             Tokens.STRING("", !left_tag, yypos + 1)))
| 158 => (YYBEGIN INITIAL;
                        ErrorMsg.error yypos ("illegal string having \\n");
                        valid_str := false;
                        lineNum := !lineNum + 1;
                        linePos := yypos :: !linePos;
                        Tokens.STRING("", !left_tag, yypos + 1))
| 160 => (YYBEGIN SLASH;
                        continue())
| 162 => let val yytext=yymktext() in buff_string := !buff_string ^ yytext;
                        continue() end
| 164 => (YYBEGIN STRING;
                        buff_string := !buff_string ^ "\n";
                        continue())
| 166 => (YYBEGIN STRING;
                        buff_string := !buff_string ^ "\t";
                        continue())
| 169 => let val yytext=yymktext() in YYBEGIN STRING;
                        buff_string := !buff_string ^
                          String.str(chr(ord(String.sub(yytext, 1)) - 64));
                        continue() end
| 173 => let val yytext=yymktext() in YYBEGIN STRING;
                        let val SOME tempnum = Int.fromString(yytext)
                        in
                          if tempnum > 255
                            then
                              (ErrorMsg.error yypos ("illegal escape \\" ^
                                                      yytext);
                               valid_str := false)
                            else buff_string := !buff_string ^
                                                String.str(chr(tempnum))
                        end;
                        continue() end
| 175 => (YYBEGIN STRING;
                        buff_string := !buff_string ^ "\"";
                        continue())
| 177 => (YYBEGIN STRING;
                        buff_string := !buff_string ^ "\\";
                        continue())
| 181 => let val yytext=yymktext() in YYBEGIN SLASH_M;
                        buff_string := !buff_string ^ yytext;
                        format_flag := true;
                        continue() end
| 183 => (YYBEGIN SLASH_M;
                        buff_string := !buff_string ^ "\n";
                        format_flag := true;
                        lineNum := !lineNum + 1;
                        linePos := yypos :: !linePos;
                        continue())
| 185 => let val yytext=yymktext() in YYBEGIN SLASH_M;
                        buff_string := !buff_string ^ yytext;
                        format_flag := false;
                        continue() end
| 187 => (buff_string := !buff_string ^ "\n";
                        format_flag := true;
                        lineNum := !lineNum + 1;
                        linePos := yypos :: !linePos;
                        continue())
| 191 => let val yytext=yymktext() in buff_string := !buff_string ^ yytext;
                        format_flag := true;
                        continue() end
| 193 => (if !format_flag
                          then YYBEGIN STRING
                          else
                            (ErrorMsg.error yypos("illegal format \\f___f\\");
                             YYBEGIN STRING);
                        continue())
| 195 => (YYBEGIN INITIAL;
                        ErrorMsg.error yypos("illegal escape");
                        Tokens.STRING("", !left_tag, yypos + 1))
| 197 => let val yytext=yymktext() in buff_string := !buff_string ^ yytext;
                        continue() end
| 199 => let val yytext=yymktext() in ErrorMsg.error yypos ("illegal character " ^ yytext);
                        continue() end
| 23 => (Tokens.FUNCTION(yypos, yypos + 8))
| 29 => (Tokens.BREAK(yypos, yypos + 5))
| 3 => (continue())
| 32 => (Tokens.OF(yypos, yypos + 2))
| 36 => (Tokens.END(yypos, yypos + 3))
| 39 => (Tokens.IN(yypos, yypos + 2))
| 43 => (Tokens.NIL(yypos, yypos + 3))
| 47 => (Tokens.LET(yypos, yypos + 3))
| 5 => (continue())
| 50 => (Tokens.DO(yypos, yypos + 2))
| 53 => (Tokens.TO(yypos, yypos + 2))
| 57 => (Tokens.FOR(yypos, yypos + 3))
| 63 => (Tokens.WHILE(yypos, yypos + 5))
| 68 => (Tokens.ELSE(yypos, yypos + 4))
| 73 => (Tokens.THEN(yypos, yypos + 4))
| 76 => (Tokens.IF(yypos, yypos + 2))
| 82 => (Tokens.ARRAY(yypos, yypos + 5))
| 85 => (Tokens.ASSIGN(yypos, yypos + 2))
| 87 => (Tokens.OR(yypos, yypos + 1))
| 89 => (Tokens.AND(yypos, yypos + 1))
| 92 => (Tokens.GE(yypos, yypos + 2))
| 94 => (Tokens.GT(yypos, yypos + 1))
| 97 => (Tokens.LE(yypos, yypos + 2))
| 99 => (Tokens.LT(yypos, yypos + 1))
| _ => raise Internal.LexerError

		) end )

	val {fin,trans} = Unsafe.Vector.sub(Internal.tab, s)
	val NewAcceptingLeaves = fin::AcceptingLeaves
	in if l = !yybl then
	     if trans = #trans(Vector.sub(Internal.tab,0))
	       then action(l,NewAcceptingLeaves
) else	    let val newchars= if !yydone then "" else yyinput 1024
	    in if (size newchars)=0
		  then (yydone := true;
		        if (l=i0) then UserDeclarations.eof ()
		                  else action(l,NewAcceptingLeaves))
		  else (if i0=l then yyb := newchars
		     else yyb := substring(!yyb,i0,l-i0)^newchars;
		     yygone := !yygone+i0;
		     yybl := size (!yyb);
		     scan (s,AcceptingLeaves,l-i0,0))
	    end
	  else let val NewChar = Char.ord(Unsafe.CharVector.sub(!yyb,l))
		val NewChar = if NewChar<128 then NewChar else 128
		val NewState = Char.ord(Unsafe.CharVector.sub(trans,NewChar))
		in if NewState=0 then action(l,NewAcceptingLeaves)
		else scan(NewState,NewAcceptingLeaves,l+1,i0)
	end
	end
(*
	val start= if substring(!yyb,!yybufpos-1,1)="\n"
then !yybegin+1 else !yybegin
*)
	in scan(!yybegin (* start *),nil,!yybufpos,!yybufpos)
    end
end
  in lex
  end
end
